// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<CANTalon> RobotMap::driveTrainleftFront;
std::shared_ptr<CANTalon> RobotMap::driveTrainleftRear;
std::shared_ptr<CANTalon> RobotMap::driveTrainrightFront;
std::shared_ptr<CANTalon> RobotMap::driveTrainrightRear;
std::shared_ptr<RobotDrive> RobotMap::driveTrainRobotDrive;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    driveTrainleftFront.reset(new CANTalon(12)); //12
    lw->AddActuator("DriveTrain", "leftFront", driveTrainleftFront);
    
    driveTrainleftRear.reset(new CANTalon(13)); //13
    lw->AddActuator("DriveTrain", "leftRear", driveTrainleftRear);
    
    driveTrainrightFront.reset(new CANTalon(11)); //11
    lw->AddActuator("DriveTrain", "rightFront", driveTrainrightFront);
    
    driveTrainrightRear.reset(new CANTalon(10)); //10
    lw->AddActuator("DriveTrain", "rightRear", driveTrainrightRear);
    
    driveTrainRobotDrive.reset(new RobotDrive(driveTrainleftFront, driveTrainleftRear,
              driveTrainrightFront, driveTrainrightRear));
    
    driveTrainRobotDrive->SetSafetyEnabled(false);
        driveTrainRobotDrive->SetExpiration(0.1);
        driveTrainRobotDrive->SetSensitivity(0.5);
        driveTrainRobotDrive->SetMaxOutput(1.0);
        driveTrainRobotDrive->SetInvertedMotor(RobotDrive::kFrontLeftMotor, true);
        driveTrainRobotDrive->SetInvertedMotor(RobotDrive::kRearLeftMotor, true);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
